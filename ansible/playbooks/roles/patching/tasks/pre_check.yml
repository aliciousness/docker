---
#########################################################
#                    Pre-update Check                   #
#########################################################
#    Collect the system distribution and version        #
#########################################################
- name: set pre update os_info
  set_fact:
    os_info_pre_update:
      distribution: '{{ ansible_distribution }}'
      distribution_major_version: '{{ ansible_distribution_major_version }}'
      distribution_release: '{{ ansible_distribution_release }}'
      distribution_version: '{{ ansible_distribution_version }}'
      kernel_version: '{{ ansible_kernel }}'
- name: 'current OS version information BEFORE the update'
  blockinfile:
    block: |
      "HOSTNAME: {{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }} version BEFORE the update:"
      "      distribution: {{ os_info_pre_update.distribution  }} "
      "      distribution_major_version: {{ os_info_pre_update.distribution_major_version }}"
      "      distribution_release: {{ os_info_pre_update.distribution_release }}"
      "      distribution_version: {{ os_info_pre_update.distribution_version }}"
      "      kernel_version: {{ os_info_pre_update.kernel_version }}"
    dest: '{{ local_dir }}/update/{{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }}.BEFORE.{{ timestamp }}'
    create: true
    # marker: ' '
  # delegate_to: localhost
########################################################
- name: 'Return service state information'
  service_facts:
- name: ' Collect a list of the mounted device '
  set_fact:
    dvs: "{{ ansible_mounts | map(attribute='device') | list }}"