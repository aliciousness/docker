---
# tasks file for patching
# For testing whether or not we need a reboot or service restart we need apt-utils
# installed to utilize the needsrestart utility
- name: 'Ensure needrestart is installed'
  apt:
    name: 'needrestart'
    state: 'present'
  register: 'patch_utils_installed'
  retries: 3
  until: 'patch_utils_installed is succeeded'

- name: Upgrade apt packages
  apt:
    upgrade: 'full'
    # upgrade: yes or safe
    state: 'latest'
#####################################
#           Update the system       #
#####################################
- name: Update/upgrade apt packages
  apt:
    name: '{{ patch_pkgs | default("*")}}'
    state: 'latest'
    update_cache: 'yes'
    cache_valid_time: 3600
  register: apt_result
- name: Optional kernel upgrade
  block:
    - name: Update apt-get repo and update_cache
      apt:
        update_cache: 'yes'
        cache_valid_time: 3600

    - name: Upgrade apt packages
      apt:
        upgrade: 'dist'
        # upgrade: yes or safe
        state: 'latest'
  when:
    - 'apt_result is succeeded'
    - 'kernel_upgrade_debian is true'
##########################################################
- block:
    - name: 'Log if apt update failed'
      lineinfile:
        line: 'HOSTNAME: {{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }} | apt Update/upgrade failed, PLEASE CHECK THE MACHINE'
        dest: '{{ local_dir }}/update/{{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }}.FAILED.{{ timestamp }}'
        create: yes
      # delegate_to: localhost
    - name: 'Apt failed'
      debug:
        msg: 'HOSTNAME: {{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }} | apt update failed, PLEASE CHECK THE MACHINE'
  when: apt_result is failed
- block:
    - name: 'Log if nothing to update'
      lineinfile:
        line: 'HOSTNAME: {{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }} | Nothing to update.'
        dest: '{{ local_dir }}/update/{{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }}.apt.{{ timestamp }}'
        create: yes
      # delegate_to: localhost
    - name: 'nothing to update'
      debug:
        msg: 'HOSTNAME: {{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }} |  Nothing to update.'
  when: apt_result is succeeded and not apt_result.changed
- block:
    - name: 'Log if apt update success'
      lineinfile:
        line: 'HOSTNAME: {{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }} | apt update succeeded.'
        dest: '{{ local_dir }}/update/{{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }}.apt.{{ timestamp }}'
        create: yes
      # delegate_to: localhost
    - name: 'Update is done '
      debug:
        msg: 'HOSTNAME: {{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }} | apt update succeeded.'
  when: apt_result is succeeded and apt_result.changed
#########################################################
- block:
    - block:
        - name: Checking if node needs a reboot
          shell: cat /var/run/reboot-required
          register: needs_reboot
      rescue:
        - name: 'Machine does not require a reboot'
          debug:
            msg: '{{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }} does not require a reboot'
    - name: 'Reboot after patching'
      reboot:
        msg: '{{ patch_reboot_message | default("Rebooting due to patching.") }}'
        connect_timeout: 5
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      register: reboot
      when: not needs_reboot is failed or kernel_upgrade_debian is true
    - name: reboot finished
      debug:
        msg: '{{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }} has finished rebooting'
      when: not needs_reboot is failed and reboot is succeeded
  when: not patch_never_reboot
- block:
    - block:
        - name: 'Check if services need restarting'
          command: 'needrestart -r l'
          changed_when: 'needs_service_restart.stdout_lines | length > 0'
          failed_when: 'needs_service_restart.rc > 1'
          register: 'needs_service_restart'
      rescue:
        - name: 'RESCUE : Log if failure to checking restarting of services'
          lineinfile:
            line: 'HOSTNAME: {{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }} | failed checking for restart of service, here is the error {{ needs_service_restart.stdout_lines }} '
            dest: '{{ local_dir }}/update/{{ ansible_hostname }}-{{ ansible_default_ipv4["address"] }}.apt.{{ timestamp }}'
    - name: 'Restart required services'
      service:
        name: '{{ item }}'
        state: 'restarted'
      when:
        - 'needs_reboot.rc != 1'
        - 'needs_service_restart.stdout_lines | length > 0'
      with_items: '{{ needs_service_restart.stdout_lines[1:] }}'
  when:
    - 'not patch_never_restart_svc'
    - 'kernel_upgrade_debian is true'
